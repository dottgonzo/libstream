"use strict";
module.exports = function codeStream(data) {
    if (!data) {
        throw "no data";
    }
    else if (!data.channel) {
        throw "no channel";
    }
    else if (!data.hostname && !data.rtmp_hostname && !data.http_hostname) {
        throw "no host data";
    }
    var code;
    if (!data.format)
        data.format = "desktop";
    switch (data.format) {
        case "mobile":
            if (!data.http_port)
                data.http_port = 80;
            if (!data.http_hostname && data.hostname)
                data.http_hostname = data.hostname;
            if (!data.width || !data.height) {
                data.width = 862;
                data.height = 465;
                if (!data.img) {
                    data.img = 'https://lh6.ggpht.com/NrQdFAdPSI9-hreB4C7HNhj3yXRiW1jqOOi7eFyakIx_IA-Im0huIeYCs5jTidMT2qA=w300';
                }
            }
            code = '<div style="width:' + data.width + ';height:' + data.height + ';text-align:center;"><a href="http://' + data.http_hostname + ":" + data.http_port + '/hls/' + data.channel + '.m3u8"><img src="' + data.img + '"></a></div>';
            break;
        default:
            if (!data.rtmp_port)
                data.rtmp_port = 1935;
            if (!data.rtmp_hostname && data.hostname)
                data.rtmp_hostname = data.hostname;
            if (!data.width || !data.height) {
                data.width = 862;
                data.height = 465;
                code = '<object width="' + data.width + '" height="' + data.height + '"> <param name="movie" value="https://play.infly.tv/lib/StrobeMediaPlayback.swf"></param><param name="flashvars" value="src=rtmp%3A%2F%2F' + data.rtmp_hostname + '%3A' + data.rtmp_port + '%2Flive%2F' + data.channel + '&streamType=live&scaleMode=zoom"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><param name="wmode" value="direct"></param><embed src="https://play.infly.tv/lib/StrobeMediaPlayback.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="direct" width="' + data.width + '" height="' + data.height + '" flashvars="src=rtmp%3A%2F%2F' + data.rtmp_hostname + '%3A' + data.rtmp_port + '%2Flive%2F' + data.channel + '&streamType=live&scaleMode=zoom"></embed></object>';
            }
            break;
    }
    return code;
};

//# sourceMappingURL=data:application/json;base64,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QUFJLENBQUMsS0FBSyxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLGdDQUFnQyxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsb0RBQW9ELENBQUE7WUFFLzFCLENBQUM7WUFJRCxLQUFLLENBQUM7SUFHZCxDQUFDO0lBR0QsTUFBTSxDQUFDLElBQUksQ0FBQztBQUtoQixDQUFDLENBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgPSBmdW5jdGlvbiBjb2RlU3RyZWFtKGRhdGE6IHtcbiAgICBmb3JtYXQ/OiBzdHJpbmc7XG4gICAgd2lkdGg/OiBudW1iZXI7XG4gICAgaGVpZ2h0PzogbnVtYmVyO1xuICAgIGhvc3RuYW1lPzogc3RyaW5nO1xuICAgIGh0dHBfcG9ydD86IG51bWJlcjtcbiAgICBjaGFubmVsOiBzdHJpbmc7XG4gICAgaW1nPzogc3RyaW5nO1xuICAgIHJ0bXBfcG9ydD86IG51bWJlcjtcbiAgICBydG1wX2hvc3RuYW1lPzogc3RyaW5nO1xuICAgIGh0dHBfaG9zdG5hbWU/OiBzdHJpbmc7XG59KSB7XG5cbiAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgdGhyb3cgXCJubyBkYXRhXCI7XG4gICAgfSBlbHNlIGlmICghZGF0YS5jaGFubmVsKSB7XG4gICAgICAgIHRocm93IFwibm8gY2hhbm5lbFwiO1xuICAgIH0gZWxzZSBpZiAoIWRhdGEuaG9zdG5hbWUgJiYgIWRhdGEucnRtcF9ob3N0bmFtZSAmJiAhZGF0YS5odHRwX2hvc3RuYW1lKSB7XG4gICAgICAgIHRocm93IFwibm8gaG9zdCBkYXRhXCI7XG4gICAgfVxuXG4gICAgbGV0IGNvZGU7XG5cbiAgICBpZiAoIWRhdGEuZm9ybWF0KSBkYXRhLmZvcm1hdCA9IFwiZGVza3RvcFwiO1xuXG4gICAgc3dpdGNoIChkYXRhLmZvcm1hdCkge1xuXG4gICAgICAgIGNhc2UgXCJtb2JpbGVcIjpcblxuICAgICAgICAgICAgaWYgKCFkYXRhLmh0dHBfcG9ydCkgZGF0YS5odHRwX3BvcnQgPSA4MDtcblxuICAgICAgICAgICAgaWYgKCFkYXRhLmh0dHBfaG9zdG5hbWUgJiYgZGF0YS5ob3N0bmFtZSkgZGF0YS5odHRwX2hvc3RuYW1lID0gZGF0YS5ob3N0bmFtZTtcblxuICAgICAgICAgICAgaWYgKCFkYXRhLndpZHRoIHx8ICFkYXRhLmhlaWdodCkge1xuXG4gICAgICAgICAgICAgICAgZGF0YS53aWR0aCA9IDg2MjtcbiAgICAgICAgICAgICAgICBkYXRhLmhlaWdodCA9IDQ2NTtcbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuaW1nKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEuaW1nID0gJ2h0dHBzOi8vbGg2LmdncGh0LmNvbS9OclFkRkFkUFNJOS1ocmVCNEM3SE5oajN5WFJpVzFqcU9PaTdlRnlha0l4X0lBLUltMGh1SWVZQ3M1alRpZE1UMnFBPXczMDAnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29kZSA9ICc8ZGl2IHN0eWxlPVwid2lkdGg6JyArIGRhdGEud2lkdGggKyAnO2hlaWdodDonICsgZGF0YS5oZWlnaHQgKyAnO3RleHQtYWxpZ246Y2VudGVyO1wiPjxhIGhyZWY9XCJodHRwOi8vJyArIGRhdGEuaHR0cF9ob3N0bmFtZSArIFwiOlwiICsgZGF0YS5odHRwX3BvcnQgKyAnL2hscy8nICsgZGF0YS5jaGFubmVsICsgJy5tM3U4XCI+PGltZyBzcmM9XCInICsgZGF0YS5pbWcgKyAnXCI+PC9hPjwvZGl2Pic7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG5cbiAgICAgICAgZGVmYXVsdDpcblxuICAgICAgICAgICAgaWYgKCFkYXRhLnJ0bXBfcG9ydCkgZGF0YS5ydG1wX3BvcnQgPSAxOTM1O1xuXG4gICAgICAgICAgICBpZiAoIWRhdGEucnRtcF9ob3N0bmFtZSAmJiBkYXRhLmhvc3RuYW1lKSBkYXRhLnJ0bXBfaG9zdG5hbWUgPSBkYXRhLmhvc3RuYW1lO1xuXG4gICAgICAgICAgICBpZiAoIWRhdGEud2lkdGggfHwgIWRhdGEuaGVpZ2h0KSB7XG5cbiAgICAgICAgICAgICAgICBkYXRhLndpZHRoID0gODYyO1xuICAgICAgICAgICAgICAgIGRhdGEuaGVpZ2h0ID0gNDY1O1xuXG4gICAgICAgICAgICAgICAgY29kZSA9ICc8b2JqZWN0IHdpZHRoPVwiJyArIGRhdGEud2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIGRhdGEuaGVpZ2h0ICsgJ1wiPiA8cGFyYW0gbmFtZT1cIm1vdmllXCIgdmFsdWU9XCJodHRwczovL3BsYXkuaW5mbHkudHYvbGliL1N0cm9iZU1lZGlhUGxheWJhY2suc3dmXCI+PC9wYXJhbT48cGFyYW0gbmFtZT1cImZsYXNodmFyc1wiIHZhbHVlPVwic3JjPXJ0bXAlM0ElMkYlMkYnICsgZGF0YS5ydG1wX2hvc3RuYW1lICsgJyUzQScgKyBkYXRhLnJ0bXBfcG9ydCArICclMkZsaXZlJTJGJyArIGRhdGEuY2hhbm5lbCArICcmc3RyZWFtVHlwZT1saXZlJnNjYWxlTW9kZT16b29tXCI+PC9wYXJhbT48cGFyYW0gbmFtZT1cImFsbG93RnVsbFNjcmVlblwiIHZhbHVlPVwidHJ1ZVwiPjwvcGFyYW0+PHBhcmFtIG5hbWU9XCJhbGxvd3NjcmlwdGFjY2Vzc1wiIHZhbHVlPVwiYWx3YXlzXCI+PC9wYXJhbT48cGFyYW0gbmFtZT1cIndtb2RlXCIgdmFsdWU9XCJkaXJlY3RcIj48L3BhcmFtPjxlbWJlZCBzcmM9XCJodHRwczovL3BsYXkuaW5mbHkudHYvbGliL1N0cm9iZU1lZGlhUGxheWJhY2suc3dmXCIgdHlwZT1cImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCIgYWxsb3dzY3JpcHRhY2Nlc3M9XCJhbHdheXNcIiBhbGxvd2Z1bGxzY3JlZW49XCJ0cnVlXCIgd21vZGU9XCJkaXJlY3RcIiB3aWR0aD1cIicgKyBkYXRhLndpZHRoICsgJ1wiIGhlaWdodD1cIicgKyBkYXRhLmhlaWdodCArICdcIiBmbGFzaHZhcnM9XCJzcmM9cnRtcCUzQSUyRiUyRicgKyBkYXRhLnJ0bXBfaG9zdG5hbWUgKyAnJTNBJyArIGRhdGEucnRtcF9wb3J0ICsgJyUyRmxpdmUlMkYnICsgZGF0YS5jaGFubmVsICsgJyZzdHJlYW1UeXBlPWxpdmUmc2NhbGVNb2RlPXpvb21cIj48L2VtYmVkPjwvb2JqZWN0PidcblxuICAgICAgICAgICAgfVxuXG5cblxuICAgICAgICAgICAgYnJlYWs7XG5cblxuICAgIH1cblxuXG4gICAgcmV0dXJuIGNvZGU7XG5cblxuXG5cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
